/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as UnauthorizedRouteImport } from './routes/unauthorized'
import { Route as LoginRouteImport } from './routes/login'
import { Route as DeferredRouteImport } from './routes/deferred'

const UnauthorizedRoute = UnauthorizedRouteImport.update({
  id: '/unauthorized',
  path: '/unauthorized',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const DeferredRoute = DeferredRouteImport.update({
  id: '/deferred',
  path: '/deferred',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/deferred': typeof DeferredRoute
  '/login': typeof LoginRoute
  '/unauthorized': typeof UnauthorizedRoute
}
export interface FileRoutesByTo {
  '/deferred': typeof DeferredRoute
  '/login': typeof LoginRoute
  '/unauthorized': typeof UnauthorizedRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/deferred': typeof DeferredRoute
  '/login': typeof LoginRoute
  '/unauthorized': typeof UnauthorizedRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/deferred' | '/login' | '/unauthorized'
  fileRoutesByTo: FileRoutesByTo
  to: '/deferred' | '/login' | '/unauthorized'
  id: '__root__' | '/deferred' | '/login' | '/unauthorized'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  DeferredRoute: typeof DeferredRoute
  LoginRoute: typeof LoginRoute
  UnauthorizedRoute: typeof UnauthorizedRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/unauthorized': {
      id: '/unauthorized'
      path: '/unauthorized'
      fullPath: '/unauthorized'
      preLoaderRoute: typeof UnauthorizedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/deferred': {
      id: '/deferred'
      path: '/deferred'
      fullPath: '/deferred'
      preLoaderRoute: typeof DeferredRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  DeferredRoute: DeferredRoute,
  LoginRoute: LoginRoute,
  UnauthorizedRoute: UnauthorizedRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
